#namenode check command
$sudo -u hdfs hdfs haadmin -getServiceState nn1 
$standby
$hdfs getconf -namenodes
$hdfs getconf -secondaryNameNodes
$ hdfs dfsadmin -refreshNodes

#yarn administration
$yarn application [options]

COMMAND_OPTIONS	Description
-appStates <States>	Works with -list to filter applications based on input comma-separated list of application states. The valid application state can be one of the following:  ALL, NEW, NEW_SAVING, SUBMITTED, ACCEPTED, RUNNING, FINISHED, FAILED, KILLED
-appTypes <Types>	Works with -list to filter applications based on input comma-separated list of application types.
-list	Lists applications from the RM. Supports optional use of -appTypes to filter applications based on application type, and -appStates to filter applications based on application state.
-kill <ApplicationId>	Kills the application.
-status <ApplicationId>	Prints the status of the application.

$yarn application -appStates <States>
$yarn application -appTypes <Types>
$yarn application -list
$yarn application -kill <ApplicationId>
$yarn application -status <ApplicationId>


#Datanode command
	$hdfs datanode -regular						#Normal datanode startup (default).
					-rollback					#Rollback the datanode to the previous version. This should be used after stopping the datanode and distributing the old hadoop version.
					-rollingupgrade rollback	#Rollback a rolling upgrade operation.
					
#dfsadmin command
	$hdfs dfsadmin -report [-live] [-dead] [-decommissioning]	#Reports basic filesystem information and statistics. Optional flags may be used to filter the list of displayed DataNodes.
					-safemode enter|leave|get|wait	#Safe mode maintenance command. Safe mode is a Namenode state in which it  
													#1. does not accept changes to the name space (read-only)  
													#2. does not replicate or delete blocks.  
													#Safe mode is entered automatically at Namenode startup, and leaves safe mode automatically when the configured minimum percentage of blocks satisfies the minimum replication condition. Safe mode can also be entered manually, but then it can only be turned off manually as well.
					-saveNamespace                  #Save current namespace into storage directories and reset edits log. Requires safe mode.
					-rollEdits						#Rolls the edit log on the active NameNode.
					-restoreFailedStorage true|false|check	#This option will turn on/off automatic attempt to restore failed storage replicas. If a failed storage becomes available again the system will attempt to restore edits and/or fsimage during checkpoint. 'check' option will return current setting.
					-refreshNodes	#Re-read the hosts and exclude files to update the set of Datanodes that are allowed to connect to the Namenode and those that should be decommissioned or recommissioned.
					-setQuota <quota> <dirname>...<dirname>	#See HDFS Quotas Guide for the detail.
					-clrQuota <dirname>...<dirname>	#See HDFS Quotas Guide for the detail.
					-setSpaceQuota <quota> <dirname>...<dirname>	#See HDFS Quotas Guide for the detail.
					-clrSpaceQuota <dirname>...<dirname>	#See HDFS Quotas Guide for the detail.
					-setStoragePolicy <path> <policyName>	#Set a storage policy to a file or a directory.
					-getStoragePolicy <path>	#Get the storage policy of a file or a directory.
					-finalizeUpgrade	#Finalize upgrade of HDFS. Datanodes delete their previous version working directories, followed by Namenode doing the same. This completes the upgrade process.
					-rollingUpgrade [<query>|<prepare>|<finalize>]	#See Rolling Upgrade document for the detail.
					-metasave filename	#Save Namenode's primary data structures to filename in the directory specified by hadoop.log.dir property. filename is overwritten if it exists. filename will contain one line for each of the following 
																	#1. Datanodes heart beating with Namenode 
																	#2. Blocks waiting to be replicated 
																	#3. Blocks currently being replicated 
																	#4. Blocks waiting to be deleted
					-refreshServiceAcl	#Reload the service-level authorization policy file.
					-refreshUserToGroupsMappings	#Refresh user-to-groups mappings.
					-refreshSuperUserGroupsConfiguration	#Refresh superuser proxy groups mappings
					-refreshCallQueue	#Reload the call queue from config.
					-refresh <host:ipc_port> <key> [arg1..argn]	Triggers a runtime-refresh of the resource specified by <key> on <host:ipc_port>. All other args after are sent to the host.
					-pr	intTopology	#Print a tree of the racks and their nodes as reported by the Namenode
					-refreshNamenodes datanodehost:port	#For the given datanode, reloads the configuration files, stops serving the removed block-pools and starts serving new block-pools.
					-deleteBlockPool datanode-host:port #blockpoolId [force]	If force is passed, block pool directory for the given blockpool id on the given datanode is deleted along with its contents, otherwise the directory is deleted only if it is empty. The command will fail if datanode is still serving the block pool. 
																			#Refer to refreshNamenodes to shutdown a block pool service on a datanode.
					-setBalancerBandwidth <bandwidth in bytes per second>	#Changes the network bandwidth used by each datanode during HDFS block balancing. <bandwidth> is the maximum number of bytes per second that will be used by each datanode. This value overrides the dfs.balance.bandwidthPerSec parameter. 
																	#NOTE: The new value is not persistent on the DataNode.
					-allowSnapshot <snapshotDir>	#Allowing snapshots of a directory to be created. If the operation completes successfully, the directory becomes snapshottable.
					-disallowSnapshot <snapshotDir>	#Disallowing snapshots of a directory to be created. All snapshots of the directory must be deleted before disallowing snapshots.
					-fetchImage <local directory>	#Downloads the most recent fsimage from the NameNode and saves it in the specified local directory.
					-shutdownDatanode <datanode_host:ipc_port> [upgrade]	#Submit a shutdown request for the given datanode. See Rolling Upgrade document for the detail.
					-getDatanodeInfo <datanode_host:ipc_port>	#Get the information about the given datanode. See Rolling Upgrade document for the detail.
					-help [cmd]	#Displays help for the given command or all commands if none is specified.
